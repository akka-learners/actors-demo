include "router"

akka {
  actor {
    provider = "cluster"

    serializers {
      java = "akka.serialization.JavaSerializer"
    }
  }
  remote {
    log-remote-lifecycle-events = off

    artery {
      enabled = on
      transport = tcp # See Selecting a transport below
      canonical.hostname = "<getHostAddress>"
      canonical.port = 2552
//      bind.hostname = "" # internal (bind) hostname
//      bind.port = 2552
    }
  }



  discovery {
    method = kubernetes-api
    kubernetes-api {
      # Namespace discovery path
      #
      # If this path doesn't exist, the namespace will default to "default".
      pod-namespace-path = "/var/run/secrets/kubernetes.io/serviceaccount/namespace"

      # Namespace to query for pods.
      #
      # Set this value to a specific string to override discovering the namespace using pod-namespace-path.
      pod-namespace = "<pod-namespace>"

      # Selector value to query pod API with.
      # `%s` will be replaced with the configured effective name, which defaults to the actor system name
      pod-label-selector = "app=%s"
    }
  }

  management {
    http {
      bind-hostname = 0.0.0.0
      bind-port = 8558
    }

    cluster.bootstrap {
      new-cluster-enabled = on
      # pick the discovery method you'd like to use:
      discovery-method = akka.discovery
    }
  }
//  actor.deployment {
//    /front/todoRouter {
//      router = round-robin-pool
//      routees.paths = ["/user/todo"]
//      cluster {
//        enabled = on
//        allow-local-routees = on
//      }
//    }
//
//  }
}